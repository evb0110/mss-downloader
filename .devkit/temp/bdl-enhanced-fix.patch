--- a/src/main/services/EnhancedManuscriptDownloaderService.ts
+++ b/src/main/services/EnhancedManuscriptDownloaderService.ts
@@ -5334,8 +5334,8 @@ export class EnhancedManuscriptDownloaderService {
             
             // Use intelligent progress monitoring for BDL API call with enhanced timeouts
             const progressMonitor = createProgressMonitor(
                 'BDL manifest loading',
                 'bdl',
-                { initialTimeout: 45000, maxTimeout: 120000 },
+                { initialTimeout: 30000, maxTimeout: 90000 },
                 {
                     onStuckDetected: (state) => {
                         console.warn(`[BDL] ${state.statusMessage}`);
@@ -5346,17 +5346,45 @@ export class EnhancedManuscriptDownloaderService {
             progressMonitor.updateProgress(0, 1, 'Loading BDL pages data...');
             
             try {
-                const response = await this.fetchWithProxyFallback(pagesApiUrl, {
-                    signal: controller.signal,
-                    headers: {
-                        'Accept': 'application/json',
-                        'Cache-Control': 'no-cache'
-                    }
-                });
+                // Implement retry mechanism for BDL server instability
+                let response;
+                let lastError;
+                const maxRetries = 3;
+                
+                for (let attempt = 1; attempt <= maxRetries; attempt++) {
+                    try {
+                        progressMonitor.updateProgress(0.2 * attempt, 1, `Loading BDL pages data (attempt ${attempt}/${maxRetries})...`);
+                        
+                        response = await this.fetchWithProxyFallback(pagesApiUrl, {
+                            signal: controller.signal,
+                            headers: {
+                                'Accept': 'application/json',
+                                'Cache-Control': 'no-cache',
+                                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36'
+                            }
+                        });
+                        
+                        if (response.ok) {
+                            break; // Success, exit retry loop
+                        } else {
+                            lastError = new Error(`HTTP ${response.status} ${response.statusText}`);
+                            if (attempt === maxRetries) throw lastError;
+                        }
+                        
+                    } catch (error: any) {
+                        lastError = error;
+                        if (error.name === 'AbortError' || attempt === maxRetries) {
+                            throw error;
+                        }
+                        
+                        // Wait before retry (exponential backoff)
+                        await new Promise(resolve => setTimeout(resolve, 1000 * attempt));
+                    }
+                }
                 
                 progressMonitor.updateProgress(1, 1, 'BDL pages data loaded successfully');
                 
                 if (!response.ok) {
-                    throw new Error(`Failed to fetch BDL pages: HTTP ${response.status} ${response.statusText}`);
+                    throw new Error(`Failed to fetch BDL pages after ${maxRetries} attempts: HTTP ${response.status} ${response.statusText}`);
                 }
                 
                 const pagesData = await response.json();
@@ -5405,7 +5433,12 @@ export class EnhancedManuscriptDownloaderService {
                 
             } catch (fetchError: any) {
                 if (fetchError.name === 'AbortError') {
-                    throw new Error('BDL API request timed out. The server may be experiencing high load.');
+                    throw new Error('BDL API request timed out. The BDL server (bdl.servizirl.it) may be experiencing high load or temporary connectivity issues. Please try again later.');
+                }
+                if (fetchError.message?.includes('fetch failed')) {
+                    throw new Error('BDL server is currently unreachable. The BDL service (bdl.servizirl.it) may be temporarily down. Please check your internet connection and try again later.');
+                }
+                if (fetchError.message?.includes('HTTP 5')) {
+                    throw new Error('BDL server is experiencing internal errors. Please try again in a few minutes.');
                 }
                 throw fetchError;
             } finally {