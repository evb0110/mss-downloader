[
  {
    "file": "main/services/library-loaders/OrleansLoader.ts",
    "line": 175,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 200",
    "code": "const maxPagesToProcess = Math.min(mediaItems?.length, 200);"
  },
  {
    "file": "main/services/EnhancedManuscriptDownloaderService.ts",
    "line": 2180,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 60000",
    "code": "const delay = Math.min(5000 * ultraAttempt, 60000); // Progressive delay up to 1 minute"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 156,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 300000",
    "code": "delay = Math.min(exponentialDelay + jitter, 300000); // Cap at 5 minutes"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 179,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 300000",
    "code": "totalMs += Math.min(exponentialDelay, 300000);"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 1017,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 100",
    "code": "console.warn('[BNE] ⚠️  Could not detect actual page count, using default 100 pages');"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 1917,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 300",
    "code": "for (let i = 1; i <= 300; i++) { // Extended to 300 pages for full manuscripts"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 2372,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 300",
    "code": "for (let page = 1; page <= 300; page++) {"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 3318,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 300",
    "code": "const maxPages = 300; // Reasonable limit for a manuscript"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 3372,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 500",
    "code": "const maxPages = 500;"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 3517,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 300",
    "code": "const maxTestPages = 300; // ULTRATHINK FIX: Increased from 200 to support manuscripts with 278+ pag"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 5624,
    "type": "hardcoded_limit",
    "description": "Hardcoded limit: 100",
    "code": "console.warn('[Rome] Could not extract page count, defaulting to 100 pages');"
  },
  {
    "file": "SharedManifestLoaders.ts",
    "line": 747,
    "type": "timeout",
    "description": "Rome library missing custom timeout configuration",
    "code": "Default timeout: 30000ms",
    "suggestedFix": "Add: if (url.includes('digitale.bnc.roma.sbn.it')) return 90000;"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 3670,
    "type": "bug",
    "description": "Rome fetches HTML synchronously in manifest loader causing timeout",
    "code": "const pageResponse = await this.fetchWithRetry(url);",
    "suggestedFix": "Move HTML fetching to RomeLoader or use faster page detection method"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 5602,
    "type": "bug",
    "description": "Rome fetches HTML synchronously in manifest loader causing timeout",
    "code": "const pageResponse = await this.fetchWithRetry(url);",
    "suggestedFix": "Move HTML fetching to RomeLoader or use faster page detection method"
  },
  {
    "file": "shared/SharedManifestLoaders.ts",
    "line": 5624,
    "type": "hardcoded_limit",
    "description": "Rome defaults to only 100 pages if extraction fails",
    "code": "console.warn('[Rome] Could not extract page count, defaulting to 100 pages');",
    "suggestedFix": "Use binary search or progressive discovery instead of fixed limit"
  },
  {
    "file": "library-loaders/OnbLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "OnbLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/GrenobleLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "GrenobleLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/IccuLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "IccuLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/IrhtLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "IrhtLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/UnifrLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "UnifrLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/VaticanLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "VaticanLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/LaonLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "LaonLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/CeciliaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "CeciliaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/LinzLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "LinzLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/ManchesterLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "ManchesterLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/WolfenbuettelLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "WolfenbuettelLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/ModenaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "ModenaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/GrazLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "GrazLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/CudlLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "CudlLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/FlorusLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "FlorusLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/FreiburgLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "FreiburgLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/GamsLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "GamsLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/FlorenceLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "FlorenceLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/MorganLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "MorganLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/ParkerLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "ParkerLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/VeronaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "VeronaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/RbmeLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "RbmeLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/NyplLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "NyplLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/BneLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "BneLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/RouenLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "RouenLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/BerlinLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "BerlinLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/InternetCulturaleLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "InternetCulturaleLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/UnicattLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "UnicattLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/ManuscriptaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "ManuscriptaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/LocLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "LocLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/CzechLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "CzechLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/GenericIiifLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "GenericIiifLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/CologneLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "CologneLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/TrinityCamLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "TrinityCamLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/DurhamLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "DurhamLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/ViennaManuscriptaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "ViennaManuscriptaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/OrleansLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "OrleansLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/MdcCataloniaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "MdcCataloniaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/KarlsruheLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "KarlsruheLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/BvpbLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "BvpbLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/GallicaLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "GallicaLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/TorontoLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "TorontoLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/RomeLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "RomeLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/HhuLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "HhuLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/MonteCassinoLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "MonteCassinoLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/BdlLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "BdlLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  },
  {
    "file": "library-loaders/UgentLoader.ts",
    "line": 0,
    "type": "inconsistency",
    "description": "UgentLoader.ts uses hardcoded limits instead of dynamic discovery",
    "code": "Contains hardcoded page limits",
    "suggestedFix": "Implement dynamic page discovery like binary search"
  }
]